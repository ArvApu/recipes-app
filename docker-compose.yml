version: "3.7"
services:

  # Ouath server service
  oauth:
    build: 
      args:
        user: oauth-user
        uid: 1000
      context: .
      dockerfile: ./docker/oauth/Dockerfile
    image: oauth
    container_name: oauth-server
    restart: unless-stopped
    working_dir: /var/www/oauth
    depends_on: 
      - oauthdb
      - nginx
    volumes:
      - ./oauth-server:/var/www/oauth
      - ./docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      default:
        ipv4_address: "172.16.238.10"

  # API server service
  api:
    build: 
      args:
        user: api-user
        uid: 1000
      context: .
      dockerfile: ./docker/api/Dockerfile
    image: api
    container_name: api-server
    restart: unless-stopped
    working_dir: /var/www/api
    depends_on: 
      - database
      - nginx
    volumes:
      - ./recipes-api:/var/www/api
      - ./docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      default:
        ipv4_address: "172.16.238.11"

  # Database service
  database:
    image: mysql:5.7
    container_name: database
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - default

  # Oauth database service
  oauthdb:
    image: mysql:5.7
    container_name: oauthdb
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${OAUTH_DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${OAUTH_DB_PASSWORD}
      MYSQL_PASSWORD: ${OAUTH_DB_PASSWORD}
      MYSQL_USER: ${OAUTH_DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - default

  # Nginx webserver service
  nginx:
    image: nginx:1.17-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - 81:81
      - 82:82
    expose:
      - "81"
      - "82"
    volumes:
      - ./recipes-api:/var/www/api
      - ./oauth-server:/var/www/oauth
      - ./docker/nginx/back-end:/etc/nginx/conf.d
    networks:
      - default

  # Web app service
  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    volumes:
      - './web:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '80:80'
      - '443:443'
      
networks:
  default:
    name: recipes_network
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
